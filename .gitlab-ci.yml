# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:14

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
services:
#   - mysql:latest
  - redis:latest
  - postgres:latest

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml
  - template: Secret-Detection.gitlab-ci.yml

# This folder is cached between builds
# http://docs.gitlab.com/ee/ci/yaml/README.html#cache
cache:
  paths:
    - back/node_modules/

before_script:
  - cd back

stages:
  - uni_test
  # - sec_scan
  # - build
  - test
  - dast

unit-test:
  stage: uni_test
  script:
    - yarn install
    - yarn run unit-test

sast:
  stage: test
  variables:
    SAST_EXCLUDED_ANALYZERS: bandit, brakeman, flawfinder, gosec, kubesec, phpcs-security-audit,
      pmd-apex, security-code-scan, sobelow, spotbugs
    CI_DEBUG_TRACE: "true"
  artifacts:
    reports:
      sast: gl-sast-report.json

dependency_scanning:
  stage: test
  variables:
    CI_DEBUG_TRACE: "true"

dast:
  stage: dast
  variables:
    DAST_WEBSITE: http://notes.tanuki.host/
    DAST_FULL_SCAN_ENABLED: "true"

# yarn-audit:
#   stage: audit_scan
#   script:
#     - yarn audit

# snyk-scan:
#   stage: sec_scan
#   script:
#     - yarn global add snyk
#     - snyk test

# build:
#   stage: build
#   script:
#     - npm eslint
#     - npm 